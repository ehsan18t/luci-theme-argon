#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram>
# Description: Auto compile luci-theme-argon for OpenWrt
#

#
# Fork and compile the latest version yourself using Github Actions
#   1. Into the repository of your own fork
#   2. Into the repository [Settings]
#   3. [Code and automation - Actions] ↓ [General] → [Workflow permissions] ↓  Check the [Read and write permissions] and [Save]
#   4. Let's take [Actions]
#

name: "Auto compile OpenWrt LuCI Argon Theme"
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      build_stable:
        description: 'Build for Stable OpenWrt Release (e.g., 23.05)'
        required: false
        default: 'false'
  push:
    branches:
      - 'master'
    paths:
      - 'luci-theme-argon/Makefile'
env:
  TZ: Asia/Shanghai

jobs:
  job_check:
    if: github.repository == '${{ github.repository }}' # Fixed comparison
    name: Check Version
    runs-on: ubuntu-latest
    outputs:
      argon_version: ${{ steps.check_version.outputs.latest_version }}
      has_update: ${{ steps.check_version.outputs.has_update }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          ref: 'master'

      - name: Check version
        id: check_version
        env:
          url_release: https://api.github.com/repos/${{ github.repository }}/releases/latest
        run: |
          latest_version=$(grep -oP 'PKG_VERSION:=\K.*' Makefile | sed 's/^/v/')
          latest_release=$(wget -qO- -t1 -T2 ${{env.url_release}} | awk -F '"' '/tag_name/{print $4}')
          has_update=$([ "${latest_version}" != "${latest_release}" ] && echo true || echo false)
          echo "latest_version=${latest_version}" >> $GITHUB_OUTPUT
          echo "has_update=${has_update}" >> $GITHUB_OUTPUT
          echo "latest_version: ${latest_version}"
          echo "latest_release: ${latest_release}"
          echo "has_update: ${has_update}"

      - name: Generate new tag & release (if updated)
        if: steps.check_version.outputs.has_update == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: For OpenWrt Official Snapshots LuCI master
          tag_name: ${{steps.check_version.outputs.latest_version}}
          draft: true # Set to true initially, artifacts will be attached later

  job_build_snapshot:
    name: Build Argon (Snapshot - x86_64)
    needs: job_check
    # Removed the if condition here to always attempt building for snapshots unless specifically disabled
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          echo "Installing build dependencies..."
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install zstd build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-venv rsync unzip zlib1g-dev file wget
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Cache OpenWrt SDK
        id: cache-sdk
        uses: actions/cache@v3
        with:
          path: sdk-snapshot
          key: openwrt-sdk-snapshot-x86-64

      - name: Initialize Snapshot environment
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        env:
          url_sdk: https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-sdk-x86-64_gcc-14.3.0_musl.Linux-x86_64.tar.zst
        run: |
          echo "Downloading and extracting OpenWrt Snapshot SDK..."
          wget "${{ env.url_sdk }}"
          file_name=$(echo "${{env.url_sdk}}" | awk -F/ '{print $NF}')
          mkdir sdk-snapshot && tar --zstd -xvf "$file_name" -C ./sdk-snapshot --strip-components=1
          cd sdk-snapshot
          echo "Configuring feeds..."
          echo "src-git base https://git.openwrt.org/openwrt/openwrt.git;master" > feeds.conf.default # Corrected to default file
          echo "src-git-full packages https://git.openwrt.org/feed/packages.git;master" >> feeds.conf.default
          echo "src-git-full luci https://git.openwrt.org/project/luci.git;master" >> feeds.conf.default
          echo "src-git-full routing https://git.openwrt.org/feed/routing.git;master"  >> feeds.conf.default
          git clone -b master https://github.com/${{ github.repository }}.git package/luci-theme-argon # Simpler path
          ./scripts/feeds update -a
          echo "CONFIG_PACKAGE_luci-theme-argon=m" > .config # Add Argon to default config
          ./scripts/feeds install -d n luci-theme-argon
          make defconfig # Generate initial .config
          make download -j$(nproc) # Download all necessary sources

      - name: Configure and Compile Argon (Snapshot)
        id: compile_snapshot
        run: |
          echo "Starting compilation for Snapshot..."
          cd sdk-snapshot
          # Ensure argon is selected for compilation, and other unnecessary packages are excluded
          echo "CONFIG_ALL_NONSHARED=n" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL=n" >> .config
          echo "CONFIG_AUTOREMOVE=n" >> .config
          echo "CONFIG_LUCI_LANG_zh_Hans=y" >> .config
          echo "CONFIG_PACKAGE_luci-theme-argon=m" >> .config
          make defconfig # Re-run defconfig to apply changes
          make package/luci-theme-argon/{clean,compile} -j$(nproc)
          mv bin/packages/x86_64/base/ ../snapshot_ipks # Move compiled packages to a dedicated folder
          rm .config .config.old # Clean up config files
          cd ..
          echo "status=success" >> $GITHUB_OUTPUT
          echo "SNAPSHOT_FIRMWARE=$PWD/snapshot_ipks" >> $GITHUB_ENV

      - name: Upload Snapshot IPKs to Release
        uses: softprops/action-gh-release@v1
        if: steps.compile_snapshot.outputs.status == 'success' && needs.job_check.outputs.has_update == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{needs.job_check.outputs.argon_version}}
          files: ${{ env.SNAPSHOT_FIRMWARE }}/luci-theme-argon*.*
          append_body: true
          body: |
            This release includes the `luci-theme-argon` theme for OpenWrt **Snapshot** builds (x86_64).
            Please download the `.ipk` file for your architecture from the assets below.

  job_build_stable:
    name: Build Argon (Stable - x86_64, 23.05)
    needs: job_check
    if: github.event.inputs.build_stable == 'true' || needs.job_check.outputs.has_update == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          echo "Installing build dependencies..."
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install zstd build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-venv rsync unzip zlib1g-dev file wget
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Cache OpenWrt SDK (Stable)
        id: cache-sdk-stable
        uses: actions/cache@v3
        with:
          path: sdk-stable
          key: openwrt-sdk-stable-x86-64-23.05 # Unique key for stable

      - name: Initialize Stable environment (23.05)
        if: steps.cache-sdk-stable.outputs.cache-hit != 'true'
        env:
          # You might need to verify the exact SDK URL for the stable release you target (e.g., 23.05)
          # Check https://downloads.openwrt.org/releases/23.05.3/targets/x86/64/
          url_sdk_stable: https://downloads.openwrt.org/releases/23.05.3/targets/x86/64/openwrt-sdk-23.05.3-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
        run: |
          echo "Downloading and extracting OpenWrt Stable SDK (23.05)..."
          wget "${{ env.url_sdk_stable }}"
          file_name=$(echo "${{env.url_sdk_stable}}" | awk -F/ '{print $NF}')
          mkdir sdk-stable && tar -xvf "$file_name" -C ./sdk-stable --strip-components=1 # Stable SDKs often use .xz
          cd sdk-stable
          echo "Configuring feeds..."
          echo "src-git base https://git.openwrt.org/openwrt/openwrt.git;openwrt-23.05" > feeds.conf.default # Target stable branch
          echo "src-git-full packages https://git.openwrt.org/feed/packages.git;openwrt-23.05" >> feeds.conf.default
          echo "src-git-full luci https://git.openwrt.org/project/luci.git;openwrt-23.05" >> feeds.conf.default
          echo "src-git-full routing https://git.openwrt.org/feed/routing.git;openwrt-23.05"  >> feeds.conf.default
          git clone -b master https://github.com/${{ github.repository }}.git package/luci-theme-argon
          ./scripts/feeds update -a
          echo "CONFIG_PACKAGE_luci-theme-argon=m" > .config
          ./scripts/feeds install -d n luci-theme-argon
          make defconfig
          make download -j$(nproc)

      - name: Configure and Compile Argon (Stable)
        id: compile_stable
        run: |
          echo "Starting compilation for Stable..."
          cd sdk-stable
          echo "CONFIG_ALL_NONSHARED=n" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL=n" >> .config
          echo "CONFIG_AUTOREMOVE=n" >> .config
          echo "CONFIG_LUCI_LANG_zh_Hans=y" >> .config
          echo "CONFIG_PACKAGE_luci-theme-argon=m" >> .config
          make defconfig
          make package/luci-theme-argon/{clean,compile} -j$(nproc)
          mv bin/packages/x86_64/base/ ../stable_ipks # Dedicated folder for stable IPKs
          rm .config .config.old
          cd ..
          echo "status=success" >> $GITHUB_OUTPUT
          echo "STABLE_FIRMWARE=$PWD/stable_ipks" >> $GITHUB_ENV

      - name: Upload Stable IPKs to Release
        uses: softprops/action-gh-release@v1
        if: steps.compile_stable.outputs.status == 'success' && (github.event.inputs.build_stable == 'true' || needs.job_check.outputs.has_update == 'true')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{needs.job_check.outputs.argon_version}}
          files: ${{ env.STABLE_FIRMWARE }}/luci-theme-argon*.*
          append_body: true
          body: |
            This release also includes the `luci-theme-argon` theme for OpenWrt **Stable** builds (e.g., 23.05, x86_64).
            Please download the `.ipk` file for your architecture from the assets below.
